Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    STRING

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS term
Rule 2     expression -> expression MINUS term
Rule 3     expression -> term
Rule 4     term -> term MULTIPLY factor
Rule 5     term -> term DIVIDE factor
Rule 6     term -> factor
Rule 7     factor -> INT
Rule 8     factor -> FLOAT
Rule 9     factor -> LPAREN expression RPAREN
Rule 10    expression -> IF condition
Rule 11    expression -> ELIF expression : block
Rule 12    expression -> ELSE : block
Rule 13    expression -> WHILE condition block
Rule 14    condition -> expression AND expression
Rule 15    condition -> expression OR expression
Rule 16    expression -> NOT expression
Rule 17    expression -> PRINT LPAREN expression RPAREN
Rule 18    expression -> LEN LPAREN ID RPAREN
Rule 19    expression -> MAX LPAREN ID RPAREN
Rule 20    condition -> expression EQ expression
Rule 21    condition -> expression DIST expression
Rule 22    condition -> expression MAYQ expression
Rule 23    condition -> expression MENQ expression
Rule 24    block -> expression
Rule 25    block -> expression PTCOMA
Rule 26    block -> block expression
Rule 27    block -> block expression PTCOMA

Terminals, with rules where they appear

:                    : 11 12
AND                  : 14
COMMENT              : 
DIST                 : 21
DIVIDE               : 5
ELIF                 : 11
ELSE                 : 12
EQ                   : 20
FLOAT                : 8
ID                   : 18 19
IF                   : 10
INT                  : 7
LEN                  : 18
LPAREN               : 9 17 18 19
MAX                  : 19
MAYQ                 : 22
MENQ                 : 23
MINUS                : 2
MULTIPLY             : 4
NOT                  : 16
OR                   : 15
PLUS                 : 1
PRINT                : 17
PTCOMA               : 25 27
RPAREN               : 9 17 18 19
STRING               : 
WHILE                : 13
error                : 

Nonterminals, with rules where they appear

block                : 11 12 13 26 27
condition            : 10 13
expression           : 1 2 9 11 14 14 15 15 16 17 20 20 21 21 22 22 23 23 24 25 26 27 0
factor               : 4 5 6
term                 : 1 2 3 4 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 2

    (3) expression -> term .
    (4) term -> term . MULTIPLY factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)
    $end            reduce using rule 3 (expression -> term .)
    AND             reduce using rule 3 (expression -> term .)
    OR              reduce using rule 3 (expression -> term .)
    EQ              reduce using rule 3 (expression -> term .)
    DIST            reduce using rule 3 (expression -> term .)
    MAYQ            reduce using rule 3 (expression -> term .)
    MENQ            reduce using rule 3 (expression -> term .)
    :               reduce using rule 3 (expression -> term .)
    RPAREN          reduce using rule 3 (expression -> term .)
    PTCOMA          reduce using rule 3 (expression -> term .)
    IF              reduce using rule 3 (expression -> term .)
    ELIF            reduce using rule 3 (expression -> term .)
    ELSE            reduce using rule 3 (expression -> term .)
    WHILE           reduce using rule 3 (expression -> term .)
    NOT             reduce using rule 3 (expression -> term .)
    PRINT           reduce using rule 3 (expression -> term .)
    LEN             reduce using rule 3 (expression -> term .)
    MAX             reduce using rule 3 (expression -> term .)
    INT             reduce using rule 3 (expression -> term .)
    FLOAT           reduce using rule 3 (expression -> term .)
    LPAREN          reduce using rule 3 (expression -> term .)
    MULTIPLY        shift and go to state 17
    DIVIDE          shift and go to state 18


state 3

    (10) expression -> IF . condition
    (14) condition -> . expression AND expression
    (15) condition -> . expression OR expression
    (20) condition -> . expression EQ expression
    (21) condition -> . expression DIST expression
    (22) condition -> . expression MAYQ expression
    (23) condition -> . expression MENQ expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    condition                      shift and go to state 19
    expression                     shift and go to state 20
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 4

    (11) expression -> ELIF . expression : block
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 21
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 5

    (12) expression -> ELSE . : block

    :               shift and go to state 22


state 6

    (13) expression -> WHILE . condition block
    (14) condition -> . expression AND expression
    (15) condition -> . expression OR expression
    (20) condition -> . expression EQ expression
    (21) condition -> . expression DIST expression
    (22) condition -> . expression MAYQ expression
    (23) condition -> . expression MENQ expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    condition                      shift and go to state 23
    expression                     shift and go to state 20
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 7

    (16) expression -> NOT . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 24
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 8

    (17) expression -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 25


state 9

    (9) factor -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 26
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 10

    (18) expression -> LEN . LPAREN ID RPAREN

    LPAREN          shift and go to state 27


state 11

    (19) expression -> MAX . LPAREN ID RPAREN

    LPAREN          shift and go to state 28


state 12

    (6) term -> factor .

    MULTIPLY        reduce using rule 6 (term -> factor .)
    DIVIDE          reduce using rule 6 (term -> factor .)
    PLUS            reduce using rule 6 (term -> factor .)
    MINUS           reduce using rule 6 (term -> factor .)
    $end            reduce using rule 6 (term -> factor .)
    AND             reduce using rule 6 (term -> factor .)
    OR              reduce using rule 6 (term -> factor .)
    EQ              reduce using rule 6 (term -> factor .)
    DIST            reduce using rule 6 (term -> factor .)
    MAYQ            reduce using rule 6 (term -> factor .)
    MENQ            reduce using rule 6 (term -> factor .)
    :               reduce using rule 6 (term -> factor .)
    RPAREN          reduce using rule 6 (term -> factor .)
    PTCOMA          reduce using rule 6 (term -> factor .)
    IF              reduce using rule 6 (term -> factor .)
    ELIF            reduce using rule 6 (term -> factor .)
    ELSE            reduce using rule 6 (term -> factor .)
    WHILE           reduce using rule 6 (term -> factor .)
    NOT             reduce using rule 6 (term -> factor .)
    PRINT           reduce using rule 6 (term -> factor .)
    LEN             reduce using rule 6 (term -> factor .)
    MAX             reduce using rule 6 (term -> factor .)
    INT             reduce using rule 6 (term -> factor .)
    FLOAT           reduce using rule 6 (term -> factor .)
    LPAREN          reduce using rule 6 (term -> factor .)


state 13

    (7) factor -> INT .

    MULTIPLY        reduce using rule 7 (factor -> INT .)
    DIVIDE          reduce using rule 7 (factor -> INT .)
    PLUS            reduce using rule 7 (factor -> INT .)
    MINUS           reduce using rule 7 (factor -> INT .)
    $end            reduce using rule 7 (factor -> INT .)
    AND             reduce using rule 7 (factor -> INT .)
    OR              reduce using rule 7 (factor -> INT .)
    EQ              reduce using rule 7 (factor -> INT .)
    DIST            reduce using rule 7 (factor -> INT .)
    MAYQ            reduce using rule 7 (factor -> INT .)
    MENQ            reduce using rule 7 (factor -> INT .)
    :               reduce using rule 7 (factor -> INT .)
    RPAREN          reduce using rule 7 (factor -> INT .)
    PTCOMA          reduce using rule 7 (factor -> INT .)
    IF              reduce using rule 7 (factor -> INT .)
    ELIF            reduce using rule 7 (factor -> INT .)
    ELSE            reduce using rule 7 (factor -> INT .)
    WHILE           reduce using rule 7 (factor -> INT .)
    NOT             reduce using rule 7 (factor -> INT .)
    PRINT           reduce using rule 7 (factor -> INT .)
    LEN             reduce using rule 7 (factor -> INT .)
    MAX             reduce using rule 7 (factor -> INT .)
    INT             reduce using rule 7 (factor -> INT .)
    FLOAT           reduce using rule 7 (factor -> INT .)
    LPAREN          reduce using rule 7 (factor -> INT .)


state 14

    (8) factor -> FLOAT .

    MULTIPLY        reduce using rule 8 (factor -> FLOAT .)
    DIVIDE          reduce using rule 8 (factor -> FLOAT .)
    PLUS            reduce using rule 8 (factor -> FLOAT .)
    MINUS           reduce using rule 8 (factor -> FLOAT .)
    $end            reduce using rule 8 (factor -> FLOAT .)
    AND             reduce using rule 8 (factor -> FLOAT .)
    OR              reduce using rule 8 (factor -> FLOAT .)
    EQ              reduce using rule 8 (factor -> FLOAT .)
    DIST            reduce using rule 8 (factor -> FLOAT .)
    MAYQ            reduce using rule 8 (factor -> FLOAT .)
    MENQ            reduce using rule 8 (factor -> FLOAT .)
    :               reduce using rule 8 (factor -> FLOAT .)
    RPAREN          reduce using rule 8 (factor -> FLOAT .)
    PTCOMA          reduce using rule 8 (factor -> FLOAT .)
    IF              reduce using rule 8 (factor -> FLOAT .)
    ELIF            reduce using rule 8 (factor -> FLOAT .)
    ELSE            reduce using rule 8 (factor -> FLOAT .)
    WHILE           reduce using rule 8 (factor -> FLOAT .)
    NOT             reduce using rule 8 (factor -> FLOAT .)
    PRINT           reduce using rule 8 (factor -> FLOAT .)
    LEN             reduce using rule 8 (factor -> FLOAT .)
    MAX             reduce using rule 8 (factor -> FLOAT .)
    INT             reduce using rule 8 (factor -> FLOAT .)
    FLOAT           reduce using rule 8 (factor -> FLOAT .)
    LPAREN          reduce using rule 8 (factor -> FLOAT .)


state 15

    (1) expression -> expression PLUS . term
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    term                           shift and go to state 29
    factor                         shift and go to state 12

state 16

    (2) expression -> expression MINUS . term
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    term                           shift and go to state 30
    factor                         shift and go to state 12

state 17

    (4) term -> term MULTIPLY . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    factor                         shift and go to state 31

state 18

    (5) term -> term DIVIDE . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    factor                         shift and go to state 32

state 19

    (10) expression -> IF condition .

    PLUS            reduce using rule 10 (expression -> IF condition .)
    MINUS           reduce using rule 10 (expression -> IF condition .)
    $end            reduce using rule 10 (expression -> IF condition .)
    AND             reduce using rule 10 (expression -> IF condition .)
    OR              reduce using rule 10 (expression -> IF condition .)
    EQ              reduce using rule 10 (expression -> IF condition .)
    DIST            reduce using rule 10 (expression -> IF condition .)
    MAYQ            reduce using rule 10 (expression -> IF condition .)
    MENQ            reduce using rule 10 (expression -> IF condition .)
    :               reduce using rule 10 (expression -> IF condition .)
    RPAREN          reduce using rule 10 (expression -> IF condition .)
    PTCOMA          reduce using rule 10 (expression -> IF condition .)
    IF              reduce using rule 10 (expression -> IF condition .)
    ELIF            reduce using rule 10 (expression -> IF condition .)
    ELSE            reduce using rule 10 (expression -> IF condition .)
    WHILE           reduce using rule 10 (expression -> IF condition .)
    NOT             reduce using rule 10 (expression -> IF condition .)
    PRINT           reduce using rule 10 (expression -> IF condition .)
    LEN             reduce using rule 10 (expression -> IF condition .)
    MAX             reduce using rule 10 (expression -> IF condition .)
    INT             reduce using rule 10 (expression -> IF condition .)
    FLOAT           reduce using rule 10 (expression -> IF condition .)
    LPAREN          reduce using rule 10 (expression -> IF condition .)


state 20

    (14) condition -> expression . AND expression
    (15) condition -> expression . OR expression
    (20) condition -> expression . EQ expression
    (21) condition -> expression . DIST expression
    (22) condition -> expression . MAYQ expression
    (23) condition -> expression . MENQ expression
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    AND             shift and go to state 33
    OR              shift and go to state 34
    EQ              shift and go to state 35
    DIST            shift and go to state 36
    MAYQ            shift and go to state 37
    MENQ            shift and go to state 38
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 21

    (11) expression -> ELIF expression . : block
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    :               shift and go to state 39
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 22

    (12) expression -> ELSE : . block
    (24) block -> . expression
    (25) block -> . expression PTCOMA
    (26) block -> . block expression
    (27) block -> . block expression PTCOMA
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    block                          shift and go to state 40
    expression                     shift and go to state 41
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 23

    (13) expression -> WHILE condition . block
    (24) block -> . expression
    (25) block -> . expression PTCOMA
    (26) block -> . block expression
    (27) block -> . block expression PTCOMA
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    block                          shift and go to state 42
    expression                     shift and go to state 41
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 24

    (16) expression -> NOT expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 16 (expression -> NOT expression .)
    AND             reduce using rule 16 (expression -> NOT expression .)
    OR              reduce using rule 16 (expression -> NOT expression .)
    EQ              reduce using rule 16 (expression -> NOT expression .)
    DIST            reduce using rule 16 (expression -> NOT expression .)
    MAYQ            reduce using rule 16 (expression -> NOT expression .)
    MENQ            reduce using rule 16 (expression -> NOT expression .)
    :               reduce using rule 16 (expression -> NOT expression .)
    RPAREN          reduce using rule 16 (expression -> NOT expression .)
    PTCOMA          reduce using rule 16 (expression -> NOT expression .)
    IF              reduce using rule 16 (expression -> NOT expression .)
    ELIF            reduce using rule 16 (expression -> NOT expression .)
    ELSE            reduce using rule 16 (expression -> NOT expression .)
    WHILE           reduce using rule 16 (expression -> NOT expression .)
    NOT             reduce using rule 16 (expression -> NOT expression .)
    PRINT           reduce using rule 16 (expression -> NOT expression .)
    LEN             reduce using rule 16 (expression -> NOT expression .)
    MAX             reduce using rule 16 (expression -> NOT expression .)
    INT             reduce using rule 16 (expression -> NOT expression .)
    FLOAT           reduce using rule 16 (expression -> NOT expression .)
    LPAREN          reduce using rule 16 (expression -> NOT expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 16 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> NOT expression .) ]


state 25

    (17) expression -> PRINT LPAREN . expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 43
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 26

    (9) factor -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 44
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 27

    (18) expression -> LEN LPAREN . ID RPAREN

    ID              shift and go to state 45


state 28

    (19) expression -> MAX LPAREN . ID RPAREN

    ID              shift and go to state 46


state 29

    (1) expression -> expression PLUS term .
    (4) term -> term . MULTIPLY factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 1 (expression -> expression PLUS term .)
    MINUS           reduce using rule 1 (expression -> expression PLUS term .)
    $end            reduce using rule 1 (expression -> expression PLUS term .)
    AND             reduce using rule 1 (expression -> expression PLUS term .)
    OR              reduce using rule 1 (expression -> expression PLUS term .)
    EQ              reduce using rule 1 (expression -> expression PLUS term .)
    DIST            reduce using rule 1 (expression -> expression PLUS term .)
    MAYQ            reduce using rule 1 (expression -> expression PLUS term .)
    MENQ            reduce using rule 1 (expression -> expression PLUS term .)
    :               reduce using rule 1 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS term .)
    PTCOMA          reduce using rule 1 (expression -> expression PLUS term .)
    IF              reduce using rule 1 (expression -> expression PLUS term .)
    ELIF            reduce using rule 1 (expression -> expression PLUS term .)
    ELSE            reduce using rule 1 (expression -> expression PLUS term .)
    WHILE           reduce using rule 1 (expression -> expression PLUS term .)
    NOT             reduce using rule 1 (expression -> expression PLUS term .)
    PRINT           reduce using rule 1 (expression -> expression PLUS term .)
    LEN             reduce using rule 1 (expression -> expression PLUS term .)
    MAX             reduce using rule 1 (expression -> expression PLUS term .)
    INT             reduce using rule 1 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 1 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 1 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 17
    DIVIDE          shift and go to state 18


state 30

    (2) expression -> expression MINUS term .
    (4) term -> term . MULTIPLY factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 2 (expression -> expression MINUS term .)
    MINUS           reduce using rule 2 (expression -> expression MINUS term .)
    $end            reduce using rule 2 (expression -> expression MINUS term .)
    AND             reduce using rule 2 (expression -> expression MINUS term .)
    OR              reduce using rule 2 (expression -> expression MINUS term .)
    EQ              reduce using rule 2 (expression -> expression MINUS term .)
    DIST            reduce using rule 2 (expression -> expression MINUS term .)
    MAYQ            reduce using rule 2 (expression -> expression MINUS term .)
    MENQ            reduce using rule 2 (expression -> expression MINUS term .)
    :               reduce using rule 2 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS term .)
    PTCOMA          reduce using rule 2 (expression -> expression MINUS term .)
    IF              reduce using rule 2 (expression -> expression MINUS term .)
    ELIF            reduce using rule 2 (expression -> expression MINUS term .)
    ELSE            reduce using rule 2 (expression -> expression MINUS term .)
    WHILE           reduce using rule 2 (expression -> expression MINUS term .)
    NOT             reduce using rule 2 (expression -> expression MINUS term .)
    PRINT           reduce using rule 2 (expression -> expression MINUS term .)
    LEN             reduce using rule 2 (expression -> expression MINUS term .)
    MAX             reduce using rule 2 (expression -> expression MINUS term .)
    INT             reduce using rule 2 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 2 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 2 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 17
    DIVIDE          shift and go to state 18


state 31

    (4) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 4 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 4 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 4 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 4 (term -> term MULTIPLY factor .)
    $end            reduce using rule 4 (term -> term MULTIPLY factor .)
    AND             reduce using rule 4 (term -> term MULTIPLY factor .)
    OR              reduce using rule 4 (term -> term MULTIPLY factor .)
    EQ              reduce using rule 4 (term -> term MULTIPLY factor .)
    DIST            reduce using rule 4 (term -> term MULTIPLY factor .)
    MAYQ            reduce using rule 4 (term -> term MULTIPLY factor .)
    MENQ            reduce using rule 4 (term -> term MULTIPLY factor .)
    :               reduce using rule 4 (term -> term MULTIPLY factor .)
    RPAREN          reduce using rule 4 (term -> term MULTIPLY factor .)
    PTCOMA          reduce using rule 4 (term -> term MULTIPLY factor .)
    IF              reduce using rule 4 (term -> term MULTIPLY factor .)
    ELIF            reduce using rule 4 (term -> term MULTIPLY factor .)
    ELSE            reduce using rule 4 (term -> term MULTIPLY factor .)
    WHILE           reduce using rule 4 (term -> term MULTIPLY factor .)
    NOT             reduce using rule 4 (term -> term MULTIPLY factor .)
    PRINT           reduce using rule 4 (term -> term MULTIPLY factor .)
    LEN             reduce using rule 4 (term -> term MULTIPLY factor .)
    MAX             reduce using rule 4 (term -> term MULTIPLY factor .)
    INT             reduce using rule 4 (term -> term MULTIPLY factor .)
    FLOAT           reduce using rule 4 (term -> term MULTIPLY factor .)
    LPAREN          reduce using rule 4 (term -> term MULTIPLY factor .)


state 32

    (5) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 5 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 5 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 5 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 5 (term -> term DIVIDE factor .)
    $end            reduce using rule 5 (term -> term DIVIDE factor .)
    AND             reduce using rule 5 (term -> term DIVIDE factor .)
    OR              reduce using rule 5 (term -> term DIVIDE factor .)
    EQ              reduce using rule 5 (term -> term DIVIDE factor .)
    DIST            reduce using rule 5 (term -> term DIVIDE factor .)
    MAYQ            reduce using rule 5 (term -> term DIVIDE factor .)
    MENQ            reduce using rule 5 (term -> term DIVIDE factor .)
    :               reduce using rule 5 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 5 (term -> term DIVIDE factor .)
    PTCOMA          reduce using rule 5 (term -> term DIVIDE factor .)
    IF              reduce using rule 5 (term -> term DIVIDE factor .)
    ELIF            reduce using rule 5 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 5 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 5 (term -> term DIVIDE factor .)
    NOT             reduce using rule 5 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 5 (term -> term DIVIDE factor .)
    LEN             reduce using rule 5 (term -> term DIVIDE factor .)
    MAX             reduce using rule 5 (term -> term DIVIDE factor .)
    INT             reduce using rule 5 (term -> term DIVIDE factor .)
    FLOAT           reduce using rule 5 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 5 (term -> term DIVIDE factor .)


state 33

    (14) condition -> expression AND . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 47
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 34

    (15) condition -> expression OR . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 48
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 35

    (20) condition -> expression EQ . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 49
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 36

    (21) condition -> expression DIST . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 50
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 37

    (22) condition -> expression MAYQ . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 51
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 38

    (23) condition -> expression MENQ . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 52
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 39

    (11) expression -> ELIF expression : . block
    (24) block -> . expression
    (25) block -> . expression PTCOMA
    (26) block -> . block expression
    (27) block -> . block expression PTCOMA
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

    expression                     shift and go to state 41
    block                          shift and go to state 53
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 40

    (12) expression -> ELSE : block .
    (26) block -> block . expression
    (27) block -> block . expression PTCOMA
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    PLUS            reduce using rule 12 (expression -> ELSE : block .)
    MINUS           reduce using rule 12 (expression -> ELSE : block .)
    $end            reduce using rule 12 (expression -> ELSE : block .)
    AND             reduce using rule 12 (expression -> ELSE : block .)
    OR              reduce using rule 12 (expression -> ELSE : block .)
    EQ              reduce using rule 12 (expression -> ELSE : block .)
    DIST            reduce using rule 12 (expression -> ELSE : block .)
    MAYQ            reduce using rule 12 (expression -> ELSE : block .)
    MENQ            reduce using rule 12 (expression -> ELSE : block .)
    :               reduce using rule 12 (expression -> ELSE : block .)
    RPAREN          reduce using rule 12 (expression -> ELSE : block .)
    PTCOMA          reduce using rule 12 (expression -> ELSE : block .)
    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

  ! IF              [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! ELIF            [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! ELSE            [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! WHILE           [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! NOT             [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! PRINT           [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! LEN             [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! MAX             [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! INT             [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! FLOAT           [ reduce using rule 12 (expression -> ELSE : block .) ]
  ! LPAREN          [ reduce using rule 12 (expression -> ELSE : block .) ]

    expression                     shift and go to state 54
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 41

    (24) block -> expression .
    (25) block -> expression . PTCOMA
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 24 (block -> expression .)
    AND             reduce using rule 24 (block -> expression .)
    OR              reduce using rule 24 (block -> expression .)
    EQ              reduce using rule 24 (block -> expression .)
    DIST            reduce using rule 24 (block -> expression .)
    MAYQ            reduce using rule 24 (block -> expression .)
    MENQ            reduce using rule 24 (block -> expression .)
    :               reduce using rule 24 (block -> expression .)
    RPAREN          reduce using rule 24 (block -> expression .)
    IF              reduce using rule 24 (block -> expression .)
    ELIF            reduce using rule 24 (block -> expression .)
    ELSE            reduce using rule 24 (block -> expression .)
    WHILE           reduce using rule 24 (block -> expression .)
    NOT             reduce using rule 24 (block -> expression .)
    PRINT           reduce using rule 24 (block -> expression .)
    LEN             reduce using rule 24 (block -> expression .)
    MAX             reduce using rule 24 (block -> expression .)
    INT             reduce using rule 24 (block -> expression .)
    FLOAT           reduce using rule 24 (block -> expression .)
    LPAREN          reduce using rule 24 (block -> expression .)
    PTCOMA          shift and go to state 55
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 24 (block -> expression .) ]
  ! MINUS           [ reduce using rule 24 (block -> expression .) ]
  ! PTCOMA          [ reduce using rule 24 (block -> expression .) ]


state 42

    (13) expression -> WHILE condition block .
    (26) block -> block . expression
    (27) block -> block . expression PTCOMA
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    PLUS            reduce using rule 13 (expression -> WHILE condition block .)
    MINUS           reduce using rule 13 (expression -> WHILE condition block .)
    $end            reduce using rule 13 (expression -> WHILE condition block .)
    AND             reduce using rule 13 (expression -> WHILE condition block .)
    OR              reduce using rule 13 (expression -> WHILE condition block .)
    EQ              reduce using rule 13 (expression -> WHILE condition block .)
    DIST            reduce using rule 13 (expression -> WHILE condition block .)
    MAYQ            reduce using rule 13 (expression -> WHILE condition block .)
    MENQ            reduce using rule 13 (expression -> WHILE condition block .)
    :               reduce using rule 13 (expression -> WHILE condition block .)
    RPAREN          reduce using rule 13 (expression -> WHILE condition block .)
    PTCOMA          reduce using rule 13 (expression -> WHILE condition block .)
    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

  ! IF              [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! ELIF            [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! ELSE            [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! WHILE           [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! NOT             [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! PRINT           [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! LEN             [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! MAX             [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! INT             [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! FLOAT           [ reduce using rule 13 (expression -> WHILE condition block .) ]
  ! LPAREN          [ reduce using rule 13 (expression -> WHILE condition block .) ]

    expression                     shift and go to state 54
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 43

    (17) expression -> PRINT LPAREN expression . RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 56
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 44

    (9) factor -> LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    DIST            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    MAYQ            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    MENQ            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    :               reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    PTCOMA          reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    ELIF            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    LEN             reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    MAX             reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 9 (factor -> LPAREN expression RPAREN .)


state 45

    (18) expression -> LEN LPAREN ID . RPAREN

    RPAREN          shift and go to state 57


state 46

    (19) expression -> MAX LPAREN ID . RPAREN

    RPAREN          shift and go to state 58


state 47

    (14) condition -> expression AND expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 14 (condition -> expression AND expression .)
    AND             reduce using rule 14 (condition -> expression AND expression .)
    OR              reduce using rule 14 (condition -> expression AND expression .)
    EQ              reduce using rule 14 (condition -> expression AND expression .)
    DIST            reduce using rule 14 (condition -> expression AND expression .)
    MAYQ            reduce using rule 14 (condition -> expression AND expression .)
    MENQ            reduce using rule 14 (condition -> expression AND expression .)
    :               reduce using rule 14 (condition -> expression AND expression .)
    RPAREN          reduce using rule 14 (condition -> expression AND expression .)
    PTCOMA          reduce using rule 14 (condition -> expression AND expression .)
    IF              reduce using rule 14 (condition -> expression AND expression .)
    ELIF            reduce using rule 14 (condition -> expression AND expression .)
    ELSE            reduce using rule 14 (condition -> expression AND expression .)
    WHILE           reduce using rule 14 (condition -> expression AND expression .)
    NOT             reduce using rule 14 (condition -> expression AND expression .)
    PRINT           reduce using rule 14 (condition -> expression AND expression .)
    LEN             reduce using rule 14 (condition -> expression AND expression .)
    MAX             reduce using rule 14 (condition -> expression AND expression .)
    INT             reduce using rule 14 (condition -> expression AND expression .)
    FLOAT           reduce using rule 14 (condition -> expression AND expression .)
    LPAREN          reduce using rule 14 (condition -> expression AND expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 14 (condition -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 14 (condition -> expression AND expression .) ]


state 48

    (15) condition -> expression OR expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 15 (condition -> expression OR expression .)
    AND             reduce using rule 15 (condition -> expression OR expression .)
    OR              reduce using rule 15 (condition -> expression OR expression .)
    EQ              reduce using rule 15 (condition -> expression OR expression .)
    DIST            reduce using rule 15 (condition -> expression OR expression .)
    MAYQ            reduce using rule 15 (condition -> expression OR expression .)
    MENQ            reduce using rule 15 (condition -> expression OR expression .)
    :               reduce using rule 15 (condition -> expression OR expression .)
    RPAREN          reduce using rule 15 (condition -> expression OR expression .)
    PTCOMA          reduce using rule 15 (condition -> expression OR expression .)
    IF              reduce using rule 15 (condition -> expression OR expression .)
    ELIF            reduce using rule 15 (condition -> expression OR expression .)
    ELSE            reduce using rule 15 (condition -> expression OR expression .)
    WHILE           reduce using rule 15 (condition -> expression OR expression .)
    NOT             reduce using rule 15 (condition -> expression OR expression .)
    PRINT           reduce using rule 15 (condition -> expression OR expression .)
    LEN             reduce using rule 15 (condition -> expression OR expression .)
    MAX             reduce using rule 15 (condition -> expression OR expression .)
    INT             reduce using rule 15 (condition -> expression OR expression .)
    FLOAT           reduce using rule 15 (condition -> expression OR expression .)
    LPAREN          reduce using rule 15 (condition -> expression OR expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 15 (condition -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 15 (condition -> expression OR expression .) ]


state 49

    (20) condition -> expression EQ expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 20 (condition -> expression EQ expression .)
    AND             reduce using rule 20 (condition -> expression EQ expression .)
    OR              reduce using rule 20 (condition -> expression EQ expression .)
    EQ              reduce using rule 20 (condition -> expression EQ expression .)
    DIST            reduce using rule 20 (condition -> expression EQ expression .)
    MAYQ            reduce using rule 20 (condition -> expression EQ expression .)
    MENQ            reduce using rule 20 (condition -> expression EQ expression .)
    :               reduce using rule 20 (condition -> expression EQ expression .)
    RPAREN          reduce using rule 20 (condition -> expression EQ expression .)
    PTCOMA          reduce using rule 20 (condition -> expression EQ expression .)
    IF              reduce using rule 20 (condition -> expression EQ expression .)
    ELIF            reduce using rule 20 (condition -> expression EQ expression .)
    ELSE            reduce using rule 20 (condition -> expression EQ expression .)
    WHILE           reduce using rule 20 (condition -> expression EQ expression .)
    NOT             reduce using rule 20 (condition -> expression EQ expression .)
    PRINT           reduce using rule 20 (condition -> expression EQ expression .)
    LEN             reduce using rule 20 (condition -> expression EQ expression .)
    MAX             reduce using rule 20 (condition -> expression EQ expression .)
    INT             reduce using rule 20 (condition -> expression EQ expression .)
    FLOAT           reduce using rule 20 (condition -> expression EQ expression .)
    LPAREN          reduce using rule 20 (condition -> expression EQ expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 20 (condition -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 20 (condition -> expression EQ expression .) ]


state 50

    (21) condition -> expression DIST expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 21 (condition -> expression DIST expression .)
    AND             reduce using rule 21 (condition -> expression DIST expression .)
    OR              reduce using rule 21 (condition -> expression DIST expression .)
    EQ              reduce using rule 21 (condition -> expression DIST expression .)
    DIST            reduce using rule 21 (condition -> expression DIST expression .)
    MAYQ            reduce using rule 21 (condition -> expression DIST expression .)
    MENQ            reduce using rule 21 (condition -> expression DIST expression .)
    :               reduce using rule 21 (condition -> expression DIST expression .)
    RPAREN          reduce using rule 21 (condition -> expression DIST expression .)
    PTCOMA          reduce using rule 21 (condition -> expression DIST expression .)
    IF              reduce using rule 21 (condition -> expression DIST expression .)
    ELIF            reduce using rule 21 (condition -> expression DIST expression .)
    ELSE            reduce using rule 21 (condition -> expression DIST expression .)
    WHILE           reduce using rule 21 (condition -> expression DIST expression .)
    NOT             reduce using rule 21 (condition -> expression DIST expression .)
    PRINT           reduce using rule 21 (condition -> expression DIST expression .)
    LEN             reduce using rule 21 (condition -> expression DIST expression .)
    MAX             reduce using rule 21 (condition -> expression DIST expression .)
    INT             reduce using rule 21 (condition -> expression DIST expression .)
    FLOAT           reduce using rule 21 (condition -> expression DIST expression .)
    LPAREN          reduce using rule 21 (condition -> expression DIST expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 21 (condition -> expression DIST expression .) ]
  ! MINUS           [ reduce using rule 21 (condition -> expression DIST expression .) ]


state 51

    (22) condition -> expression MAYQ expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 22 (condition -> expression MAYQ expression .)
    AND             reduce using rule 22 (condition -> expression MAYQ expression .)
    OR              reduce using rule 22 (condition -> expression MAYQ expression .)
    EQ              reduce using rule 22 (condition -> expression MAYQ expression .)
    DIST            reduce using rule 22 (condition -> expression MAYQ expression .)
    MAYQ            reduce using rule 22 (condition -> expression MAYQ expression .)
    MENQ            reduce using rule 22 (condition -> expression MAYQ expression .)
    :               reduce using rule 22 (condition -> expression MAYQ expression .)
    RPAREN          reduce using rule 22 (condition -> expression MAYQ expression .)
    PTCOMA          reduce using rule 22 (condition -> expression MAYQ expression .)
    IF              reduce using rule 22 (condition -> expression MAYQ expression .)
    ELIF            reduce using rule 22 (condition -> expression MAYQ expression .)
    ELSE            reduce using rule 22 (condition -> expression MAYQ expression .)
    WHILE           reduce using rule 22 (condition -> expression MAYQ expression .)
    NOT             reduce using rule 22 (condition -> expression MAYQ expression .)
    PRINT           reduce using rule 22 (condition -> expression MAYQ expression .)
    LEN             reduce using rule 22 (condition -> expression MAYQ expression .)
    MAX             reduce using rule 22 (condition -> expression MAYQ expression .)
    INT             reduce using rule 22 (condition -> expression MAYQ expression .)
    FLOAT           reduce using rule 22 (condition -> expression MAYQ expression .)
    LPAREN          reduce using rule 22 (condition -> expression MAYQ expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 22 (condition -> expression MAYQ expression .) ]
  ! MINUS           [ reduce using rule 22 (condition -> expression MAYQ expression .) ]


state 52

    (23) condition -> expression MENQ expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 23 (condition -> expression MENQ expression .)
    AND             reduce using rule 23 (condition -> expression MENQ expression .)
    OR              reduce using rule 23 (condition -> expression MENQ expression .)
    EQ              reduce using rule 23 (condition -> expression MENQ expression .)
    DIST            reduce using rule 23 (condition -> expression MENQ expression .)
    MAYQ            reduce using rule 23 (condition -> expression MENQ expression .)
    MENQ            reduce using rule 23 (condition -> expression MENQ expression .)
    :               reduce using rule 23 (condition -> expression MENQ expression .)
    RPAREN          reduce using rule 23 (condition -> expression MENQ expression .)
    PTCOMA          reduce using rule 23 (condition -> expression MENQ expression .)
    IF              reduce using rule 23 (condition -> expression MENQ expression .)
    ELIF            reduce using rule 23 (condition -> expression MENQ expression .)
    ELSE            reduce using rule 23 (condition -> expression MENQ expression .)
    WHILE           reduce using rule 23 (condition -> expression MENQ expression .)
    NOT             reduce using rule 23 (condition -> expression MENQ expression .)
    PRINT           reduce using rule 23 (condition -> expression MENQ expression .)
    LEN             reduce using rule 23 (condition -> expression MENQ expression .)
    MAX             reduce using rule 23 (condition -> expression MENQ expression .)
    INT             reduce using rule 23 (condition -> expression MENQ expression .)
    FLOAT           reduce using rule 23 (condition -> expression MENQ expression .)
    LPAREN          reduce using rule 23 (condition -> expression MENQ expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 23 (condition -> expression MENQ expression .) ]
  ! MINUS           [ reduce using rule 23 (condition -> expression MENQ expression .) ]


state 53

    (11) expression -> ELIF expression : block .
    (26) block -> block . expression
    (27) block -> block . expression PTCOMA
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) expression -> . IF condition
    (11) expression -> . ELIF expression : block
    (12) expression -> . ELSE : block
    (13) expression -> . WHILE condition block
    (16) expression -> . NOT expression
    (17) expression -> . PRINT LPAREN expression RPAREN
    (18) expression -> . LEN LPAREN ID RPAREN
    (19) expression -> . MAX LPAREN ID RPAREN
    (4) term -> . term MULTIPLY factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . INT
    (8) factor -> . FLOAT
    (9) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    PLUS            reduce using rule 11 (expression -> ELIF expression : block .)
    MINUS           reduce using rule 11 (expression -> ELIF expression : block .)
    $end            reduce using rule 11 (expression -> ELIF expression : block .)
    AND             reduce using rule 11 (expression -> ELIF expression : block .)
    OR              reduce using rule 11 (expression -> ELIF expression : block .)
    EQ              reduce using rule 11 (expression -> ELIF expression : block .)
    DIST            reduce using rule 11 (expression -> ELIF expression : block .)
    MAYQ            reduce using rule 11 (expression -> ELIF expression : block .)
    MENQ            reduce using rule 11 (expression -> ELIF expression : block .)
    :               reduce using rule 11 (expression -> ELIF expression : block .)
    RPAREN          reduce using rule 11 (expression -> ELIF expression : block .)
    PTCOMA          reduce using rule 11 (expression -> ELIF expression : block .)
    IF              shift and go to state 3
    ELIF            shift and go to state 4
    ELSE            shift and go to state 5
    WHILE           shift and go to state 6
    NOT             shift and go to state 7
    PRINT           shift and go to state 8
    LEN             shift and go to state 10
    MAX             shift and go to state 11
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    LPAREN          shift and go to state 9

  ! IF              [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! ELIF            [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! ELSE            [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! WHILE           [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! NOT             [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! PRINT           [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! LEN             [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! MAX             [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! INT             [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! FLOAT           [ reduce using rule 11 (expression -> ELIF expression : block .) ]
  ! LPAREN          [ reduce using rule 11 (expression -> ELIF expression : block .) ]

    expression                     shift and go to state 54
    term                           shift and go to state 2
    factor                         shift and go to state 12

state 54

    (26) block -> block expression .
    (27) block -> block expression . PTCOMA
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 26 (block -> block expression .)
    AND             reduce using rule 26 (block -> block expression .)
    OR              reduce using rule 26 (block -> block expression .)
    EQ              reduce using rule 26 (block -> block expression .)
    DIST            reduce using rule 26 (block -> block expression .)
    MAYQ            reduce using rule 26 (block -> block expression .)
    MENQ            reduce using rule 26 (block -> block expression .)
    :               reduce using rule 26 (block -> block expression .)
    RPAREN          reduce using rule 26 (block -> block expression .)
    IF              reduce using rule 26 (block -> block expression .)
    ELIF            reduce using rule 26 (block -> block expression .)
    ELSE            reduce using rule 26 (block -> block expression .)
    WHILE           reduce using rule 26 (block -> block expression .)
    NOT             reduce using rule 26 (block -> block expression .)
    PRINT           reduce using rule 26 (block -> block expression .)
    LEN             reduce using rule 26 (block -> block expression .)
    MAX             reduce using rule 26 (block -> block expression .)
    INT             reduce using rule 26 (block -> block expression .)
    FLOAT           reduce using rule 26 (block -> block expression .)
    LPAREN          reduce using rule 26 (block -> block expression .)
    PTCOMA          shift and go to state 59
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 26 (block -> block expression .) ]
  ! MINUS           [ reduce using rule 26 (block -> block expression .) ]
  ! PTCOMA          [ reduce using rule 26 (block -> block expression .) ]


state 55

    (25) block -> expression PTCOMA .

    PLUS            reduce using rule 25 (block -> expression PTCOMA .)
    MINUS           reduce using rule 25 (block -> expression PTCOMA .)
    $end            reduce using rule 25 (block -> expression PTCOMA .)
    AND             reduce using rule 25 (block -> expression PTCOMA .)
    OR              reduce using rule 25 (block -> expression PTCOMA .)
    EQ              reduce using rule 25 (block -> expression PTCOMA .)
    DIST            reduce using rule 25 (block -> expression PTCOMA .)
    MAYQ            reduce using rule 25 (block -> expression PTCOMA .)
    MENQ            reduce using rule 25 (block -> expression PTCOMA .)
    :               reduce using rule 25 (block -> expression PTCOMA .)
    RPAREN          reduce using rule 25 (block -> expression PTCOMA .)
    PTCOMA          reduce using rule 25 (block -> expression PTCOMA .)
    IF              reduce using rule 25 (block -> expression PTCOMA .)
    ELIF            reduce using rule 25 (block -> expression PTCOMA .)
    ELSE            reduce using rule 25 (block -> expression PTCOMA .)
    WHILE           reduce using rule 25 (block -> expression PTCOMA .)
    NOT             reduce using rule 25 (block -> expression PTCOMA .)
    PRINT           reduce using rule 25 (block -> expression PTCOMA .)
    LEN             reduce using rule 25 (block -> expression PTCOMA .)
    MAX             reduce using rule 25 (block -> expression PTCOMA .)
    INT             reduce using rule 25 (block -> expression PTCOMA .)
    FLOAT           reduce using rule 25 (block -> expression PTCOMA .)
    LPAREN          reduce using rule 25 (block -> expression PTCOMA .)


state 56

    (17) expression -> PRINT LPAREN expression RPAREN .

    PLUS            reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    MINUS           reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    AND             reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    OR              reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    EQ              reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    DIST            reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    MAYQ            reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    MENQ            reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    :               reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    PTCOMA          reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    ELIF            reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    ELSE            reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    NOT             reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    LEN             reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    MAX             reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    INT             reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    FLOAT           reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 17 (expression -> PRINT LPAREN expression RPAREN .)


state 57

    (18) expression -> LEN LPAREN ID RPAREN .

    PLUS            reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    MINUS           reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    $end            reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    AND             reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    OR              reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    EQ              reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    DIST            reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    MAYQ            reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    MENQ            reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    :               reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    RPAREN          reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    PTCOMA          reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    IF              reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    ELIF            reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    ELSE            reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    WHILE           reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    NOT             reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    PRINT           reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    LEN             reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    MAX             reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    INT             reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    FLOAT           reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)
    LPAREN          reduce using rule 18 (expression -> LEN LPAREN ID RPAREN .)


state 58

    (19) expression -> MAX LPAREN ID RPAREN .

    PLUS            reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    MINUS           reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    $end            reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    AND             reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    OR              reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    EQ              reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    DIST            reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    MAYQ            reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    MENQ            reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    :               reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    RPAREN          reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    PTCOMA          reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    IF              reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    ELIF            reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    ELSE            reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    WHILE           reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    NOT             reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    PRINT           reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    LEN             reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    MAX             reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    INT             reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    FLOAT           reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)
    LPAREN          reduce using rule 19 (expression -> MAX LPAREN ID RPAREN .)


state 59

    (27) block -> block expression PTCOMA .

    PLUS            reduce using rule 27 (block -> block expression PTCOMA .)
    MINUS           reduce using rule 27 (block -> block expression PTCOMA .)
    $end            reduce using rule 27 (block -> block expression PTCOMA .)
    AND             reduce using rule 27 (block -> block expression PTCOMA .)
    OR              reduce using rule 27 (block -> block expression PTCOMA .)
    EQ              reduce using rule 27 (block -> block expression PTCOMA .)
    DIST            reduce using rule 27 (block -> block expression PTCOMA .)
    MAYQ            reduce using rule 27 (block -> block expression PTCOMA .)
    MENQ            reduce using rule 27 (block -> block expression PTCOMA .)
    :               reduce using rule 27 (block -> block expression PTCOMA .)
    RPAREN          reduce using rule 27 (block -> block expression PTCOMA .)
    PTCOMA          reduce using rule 27 (block -> block expression PTCOMA .)
    IF              reduce using rule 27 (block -> block expression PTCOMA .)
    ELIF            reduce using rule 27 (block -> block expression PTCOMA .)
    ELSE            reduce using rule 27 (block -> block expression PTCOMA .)
    WHILE           reduce using rule 27 (block -> block expression PTCOMA .)
    NOT             reduce using rule 27 (block -> block expression PTCOMA .)
    PRINT           reduce using rule 27 (block -> block expression PTCOMA .)
    LEN             reduce using rule 27 (block -> block expression PTCOMA .)
    MAX             reduce using rule 27 (block -> block expression PTCOMA .)
    INT             reduce using rule 27 (block -> block expression PTCOMA .)
    FLOAT           reduce using rule 27 (block -> block expression PTCOMA .)
    LPAREN          reduce using rule 27 (block -> block expression PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for IF in state 40 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 40 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 40 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 40 resolved as shift
WARNING: shift/reduce conflict for NOT in state 40 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 40 resolved as shift
WARNING: shift/reduce conflict for LEN in state 40 resolved as shift
WARNING: shift/reduce conflict for MAX in state 40 resolved as shift
WARNING: shift/reduce conflict for INT in state 40 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 40 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 40 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for IF in state 42 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 42 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 42 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 42 resolved as shift
WARNING: shift/reduce conflict for NOT in state 42 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 42 resolved as shift
WARNING: shift/reduce conflict for LEN in state 42 resolved as shift
WARNING: shift/reduce conflict for MAX in state 42 resolved as shift
WARNING: shift/reduce conflict for INT in state 42 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 42 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for IF in state 53 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 53 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 53 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 53 resolved as shift
WARNING: shift/reduce conflict for NOT in state 53 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 53 resolved as shift
WARNING: shift/reduce conflict for LEN in state 53 resolved as shift
WARNING: shift/reduce conflict for MAX in state 53 resolved as shift
WARNING: shift/reduce conflict for INT in state 53 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 53 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 53 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
